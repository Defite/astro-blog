---
import type { MDXInstance } from "astro";
import PostCard from "../../components/PostCard.astro";
import Layout from "../../layouts/Layout.astro";
import type { Frontmatter } from "../../types";
import getPageNumbers from "../../utils/getPageNumbers";
import slugify from "../../utils/slugify";

export interface Props {
  post: MDXInstance<Frontmatter>;
}

type PostResult = {
  params: {
    slug: string | number;
  };
  props?: {
    post: MDXInstance<Record<string, any>>;
  };
}[];

type PagePaths = {
  params: {
    slug: string;
  };
}[];

export async function getStaticPaths() {
  const posts = await Astro.glob<Frontmatter>("../../content/posts/*.mdx");

  let postResult: PostResult = posts.map((post) => {
    return {
      params: {
        slug: slugify(post.frontmatter),
      },
      props: {
        post,
      },
    };
  });

  const pagePaths: PagePaths = getPageNumbers(posts.length).map((pageNum) => ({
    params: { slug: String(pageNum) },
  }));

  return [...postResult, ...pagePaths];
}

const { post } = Astro.props;
---

{
  post ? (
    <Layout title={post.frontmatter.title}>
      <PostCard post={post} isPostPage />
    </Layout>
  ) : null
}
