---
import type { MarkdownInstance } from "astro";
import type { Frontmatter } from "../types";
import convertDate from "../utils/convertDate";
import getCategoryTheme from "../utils/getCategoryTheme";

export type Props = {
  post: MarkdownInstance<Frontmatter>;
  isPostPage?: boolean;
};

const { isPostPage } = Astro.props;
const { frontmatter, Content } = Astro.props.post;
const { title, datetime, category, coverImage, slug, excerpt } = frontmatter;
const date = convertDate(datetime);
const postUrl = `/posts/${slug}`;

const categoryColor = getCategoryTheme(category);
---

<article class:list={["post", "post-animation", { "post-full": isPostPage }]}>
  <header>
    {
      category && date ? (
        <div class="post-meta mb-3">
          <a
            href={`/category/${category}`}
            class={`post-category mr-3 md:mr-0 ${categoryColor}`}
          >
            {category}
          </a>
          <time class="post-date" datetime={date} class="post-date">
            {date}
          </time>
        </div>
      ) : null
    }
    <h2
      class="text-2xl md:text-[32px] font-bold text-gray-900 dark:text-[#efefef] mb-8"
    >
      <a href={postUrl}>{title}</a>
    </h2>
  </header>
  <div>
    {coverImage && <img class="rounded-md mb-4" src={coverImage} />}
  </div>

  <div class="post-content text-base md:text-lg mb-4">
    {isPostPage ? <Content /> : excerpt}
  </div>

  {
    !isPostPage ? (
      <footer class="text-base md:text-lg">
        <a class="read-more" href={postUrl}>
          Read more
          <span class="hidden-arrow">&rarr;</span>
        </a>
      </footer>
    ) : null
  }
</article>

<style>
  .post {
    @apply mb-8;
    @apply mt-16;
    @apply relative;
  }

  .post-animation {
    transition: transform 0.5s ease-in-out, opacity 0.5s ease-in-out;
  }

  :global(.loading) .post-animation {
    transform: translateY(1rem);
    opacity: 0;
  }

  .post-date {
    @apply text-stone-500;
    @apply dark:text-stone-400;
  }

  .post-category {
    @apply rounded-md;
    @apply uppercase;
    @apply text-white;
    @apply dark:text-[#222222];
    @apply inline-block;
    @apply px-1;
    @apply py-1;
    @apply font-bold;
    @apply text-sm;
  }

  .post-content {
    @apply dark:text-neutral-300;
  }

  .post-content :global(p) {
    margin-top: 1em;
  }

  .post-content :global(a) {
    @apply text-indigo-500;
    @apply border-indigo-500/50;
    @apply border-b-2;
    @apply border-solid;
  }

  .post-content :global(a:hover) {
    @apply border-indigo-500;
  }

  @media (min-width: 701px) {
    .post {
      position: relative;
      padding-left: 180px;
    }

    .post-full {
      padding-left: 0;
    }

    .post-date {
      @apply absolute;
      @apply top-0;
      @apply left-0;
    }

    .post-full .post-date {
      @apply relative;
    }

    .post-full .post-category {
      @apply mr-3;
    }
  }

  .post:first-child {
    @apply mt-0;
  }

  .read-more {
    @apply text-indigo-500;
  }

  .read-more .hidden-arrow {
    @apply invisible;
  }

  .read-more:hover .hidden-arrow {
    @apply visible;
  }
</style>
